{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skuma573\\\\Desktop\\\\SampleProjects\\\\Quiz\\\\checklist-2\\\\src\\\\Admin\\\\QuizForm.jsx\";\nimport React from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport styles from \"./QuizForm.module.css\";\nimport Card from \"../common/card/card\";\nimport Button from \"../common/button/button\";\nimport RemoveButton from \"../common/button/removebutton\"; // functional component for general input fields\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(\"div\", {\n  className: styles.alignCentre,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.inputField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  placeholder: label,\n  className: \"form-control\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n})), touched && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, error))); // functional component to render the options\n\n\nconst renderOptions = ({\n  fields,\n  meta: {\n    error\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.alignCentre,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.inputField,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => fields.push(),\n  label: \"Add Option\",\n  styles: styles.AddOption,\n  type: \"button\",\n  disabled: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}))), fields.map((option, index) => React.createElement(\"div\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.alignButtonRight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(RemoveButton, {\n  iconName: \"fa fa-trash\",\n  onClick: () => fields.remove(index),\n  styling: styles.smallerIconOption,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), React.createElement(Field, {\n  name: option,\n  type: \"text\",\n  component: renderField,\n  label: \"Option \".concat(index + 1),\n  placeholder: \"Option\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))), error && React.createElement(\"li\", {\n  className: \"error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, error)); // functional component to render questions and the options\n\n\nconst renderQuestions = ({\n  fields,\n  meta: {\n    touched,\n    error,\n    submitFailed\n  }\n}) => React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, fields.map((question, index) => React.createElement(Card, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: styles.alignButtonRight,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(RemoveButton, {\n  iconName: \"fa fa-trash\",\n  onClick: () => fields.remove(index),\n  styling: styles.enlargeIconQuestion,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n})), React.createElement(\"h4\", {\n  className: styles.alignQuestionLabel,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Question \", index + 1), React.createElement(Field, {\n  name: question,\n  type: \"text\",\n  component: renderField,\n  label: \"Question \".concat(index + 1),\n  placeholder: \"Question\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}), React.createElement(FieldArray, {\n  name: \"\".concat(question, \".options\"),\n  component: renderOptions,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n})))));\n\nconst QuizForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"quiz\",\n    type: \"text\",\n    component: renderField,\n    label: \"Quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(FieldArray, {\n    name: \"questions\",\n    component: renderQuestions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.alignCentre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: \"Cancel\",\n    styles: styles.cancelButton,\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Button, {\n    label: \"Submit\",\n    styles: styles.submitButton,\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })));\n};\n\nexport default reduxForm({\n  form: \"quizForm\" // data that is exported from the app\n  //validate,\n\n})(QuizForm);","map":{"version":3,"sources":["C:\\Users\\skuma573\\Desktop\\SampleProjects\\Quiz\\checklist-2\\src\\Admin\\QuizForm.jsx"],"names":["React","Field","FieldArray","reduxForm","styles","Card","Button","RemoveButton","renderField","input","label","type","meta","touched","error","alignCentre","inputField","renderOptions","fields","push","AddOption","map","option","index","alignButtonRight","remove","smallerIconOption","renderQuestions","submitFailed","question","enlargeIconQuestion","alignQuestionLabel","QuizForm","props","handleSubmit","pristine","reset","submitting","cancelButton","submitButton","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\r\nimport styles from \"./QuizForm.module.css\";\r\nimport Card from \"../common/card/card\";\r\nimport Button from \"../common/button/button\";\r\nimport RemoveButton from \"../common/button/removebutton\";\r\n\r\n// functional component for general input fields\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div className={styles.alignCentre}>\r\n    <div className={styles.inputField}>\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        placeholder={label}\r\n        className=\"form-control\"\r\n      />\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// functional component to render the options\r\nconst renderOptions = ({ fields, meta: { error } }) => (\r\n  <ul>\r\n    <div className={styles.alignCentre}>\r\n      <div className={styles.inputField}>\r\n        <Button\r\n          onClick={() => fields.push()}\r\n          label=\"Add Option\"\r\n          styles={styles.AddOption}\r\n          type=\"button\"\r\n          disabled=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n    {fields.map((option, index) => (\r\n      <div key={index}>\r\n        <div className={styles.alignButtonRight}>\r\n          <RemoveButton\r\n            iconName=\"fa fa-trash\"\r\n            onClick={() => fields.remove(index)}\r\n            styling={styles.smallerIconOption}\r\n          />\r\n        </div>\r\n        <Field\r\n          name={option}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label={`Option ${index + 1}`}\r\n          placeholder=\"Option\"\r\n        />\r\n      </div>\r\n    ))}\r\n    {error && <li className=\"error\">{error}</li>}\r\n  </ul>\r\n);\r\n\r\n// functional component to render questions and the options\r\nconst renderQuestions = ({fields, meta: { touched, error, submitFailed }}) => (\r\n  <ul>\r\n        {fields.map((question, index) => \r\n          <Card>\r\n            <div key={index}>\r\n              <div className={styles.alignButtonRight}>\r\n                <RemoveButton\r\n                  iconName=\"fa fa-trash\"\r\n                  onClick={() => fields.remove(index)}\r\n                  styling={styles.enlargeIconQuestion}\r\n                />\r\n              </div>\r\n\r\n              <h4 className={styles.alignQuestionLabel}>\r\n                Question {index + 1}\r\n              </h4>\r\n\r\n              <Field\r\n                name={question}\r\n                type=\"text\"\r\n                component={renderField}\r\n                label={`Question ${index + 1}`}\r\n                placeholder= \"Question\"\r\n              />\r\n\r\n              <FieldArray\r\n                name={`${question}.options`}\r\n                component={renderOptions}\r\n              />\r\n            </div>\r\n          </Card>\r\n        )}\r\n  </ul>\r\n);\r\n\r\nconst QuizForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Card>\r\n        <Field name=\"quiz\" type=\"text\" component={renderField} label=\"Quiz\" />\r\n      </Card>\r\n      <FieldArray name=\"questions\" component={renderQuestions} />\r\n\r\n      <div className={styles.alignCentre}>\r\n        <Button\r\n          label=\"Cancel\"\r\n          styles={styles.cancelButton}\r\n          type=\"button\"\r\n          disabled={pristine || submitting}\r\n          onClick={reset}\r\n        />\r\n        <Button\r\n          label=\"Submit\"\r\n          styles={styles.submitButton}\r\n          type=\"submit\"\r\n          disabled={submitting}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"quizForm\" // data that is exported from the app\r\n  //validate,\r\n})(QuizForm);\r\n"]},"metadata":{},"sourceType":"module"}